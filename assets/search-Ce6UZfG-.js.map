{"version":3,"file":"search-Ce6UZfG-.js","sources":["../../src/lib/search.ts"],"sourcesContent":["/**\n * src/lib/search.ts\n * 책임: 클라이언트 사이드 검색 유틸리티\n * 주요 exports: searchItems, Item\n * 한글 설명: 단순한 부분 문자열 기반 스코어링으로 제목/슬러그를 검색합니다.\n */\n\n// Very small fuzzy search utility for client-side title/slug search\nexport type Item = { slug: string; title: string }\n\nfunction score(text: string, query: string): number {\n  // simple case-insensitive substring score, prefer prefix matches\n  const t = text.toLowerCase()\n  const q = query.toLowerCase()\n  if (!q) return 0\n  if (t === q) return 100\n  if (t.startsWith(q)) return 80\n  if (t.includes(q)) return 50\n  return 0\n}\n\nexport function searchItems(items: Item[], query: string, limit = 8) {\n  if (!query.trim()) return []\n  const scored = items\n    .map(i => ({ i, s: Math.max(score(i.title, query), score(i.slug, query)) }))\n    .filter(x => x.s > 0)\n    .sort((a, b) => b.s - a.s)\n    .slice(0, limit)\n    .map(x => x.i)\n  return scored\n}\n"],"names":["score","text","query","t","q","searchItems","items","limit","i","x","a","b"],"mappings":"AAUA,SAASA,EAAMC,EAAcC,EAAuB,CAElD,MAAMC,EAAIF,EAAK,YAAA,EACTG,EAAIF,EAAM,YAAA,EAChB,OAAKE,EACDD,IAAMC,EAAU,IAChBD,EAAE,WAAWC,CAAC,EAAU,GACxBD,EAAE,SAASC,CAAC,EAAU,GACnB,EAJQ,CAKjB,CAEO,SAASC,EAAYC,EAAeJ,EAAeK,EAAQ,EAAG,CACnE,OAAKL,EAAM,KAAA,EACII,EACZ,IAAIE,IAAM,CAAE,EAAAA,EAAG,EAAG,KAAK,IAAIR,EAAMQ,EAAE,MAAON,CAAK,EAAGF,EAAMQ,EAAE,KAAMN,CAAK,CAAC,GAAI,EAC1E,OAAOO,GAAKA,EAAE,EAAI,CAAC,EACnB,KAAK,CAACC,EAAGC,IAAMA,EAAE,EAAID,EAAE,CAAC,EACxB,MAAM,EAAGH,CAAK,EACd,IAAIE,GAAKA,EAAE,CAAC,EANW,CAAA,CAQ5B"}