const n=`---
title: 'FAnchors'
date: '2025-08-17T16:17:41+09:00'
---
> **[[UCanvasPanel]] 내에서 위젯의 네 모서리가 부모 캔버스의 어느 '비율' 지점에 고정될지를 정의하는 구조체입니다.** 해상도에 관계없이 일관된 UI 레이아웃을 만드는 데 핵심적인 역할을 합니다.

### **1. 주요 역할 및 책임**
> **위젯의 경계가 부모 캔버스의 크기에 비례하여 위치하도록 설정합니다.**
* **비율 기반 고정점 설정**:
	위젯의 경계가 부모 캔버스의 크기에 비례하여 위치하도록 설정합니다. 값은 0.0(왼쪽/위)에서 1.0(오른쪽/아래) 사이의 비율로 지정됩니다.
* **크기 조절 방식 결정**:
	\`Minimum\`과 \`Maximum\` 앵커 값을 어떻게 설정하느냐에 따라 위젯이 부모 크기에 맞춰 함께 늘어날지, 아니면 고정된 크기를 유지할지가 결정됩니다.

### **2. 핵심 멤버 변수**
> **위젯의 왼쪽 위 모서리가 고정될 부모 캔버스의 비율 지점 (X, Y)입니다.**
* **\`Minimum\` (\`FVector2D\`)**:
	위젯의 왼쪽 위 모서리가 고정될 부모 캔버스의 비율 지점 (X, Y)입니다.
* **\`Maximum\` (\`FVector2D\`)**:
	위젯의 오른쪽 아래 모서리가 고정될 부모 캔버스의 비율 지점 (X, Y)입니다.

### **3. 작동 방식**
> **위젯은 크기가 변하지 않고, 해당 앵커 지점에 고정됩니다.**
* **앵커가 한 점일 때 (Minimum == Maximum)**:
	위젯은 크기가 변하지 않고, 해당 앵커 지점에 고정됩니다. 이때 위젯을 앵커에 어떻게 정렬할지는 [[FAnchorData]]의 \`Alignment\` 속성이 결정합니다.
* **앵커가 분리되어 있을 때 (Minimum != Maximum)**:
	위젯은 앵커 사이의 공간을 채우도록 크기가 조절됩니다. 예를 들어, \`Minimum\`이 (0,0)이고 \`Maximum\`이 (1,1)이면 위젯은 부모 캔버스 전체를 채우게 됩니다. 이때는 [[FAnchorData]]의 \`Offsets\` 속성이 앵커로부터의 추가적인 여백을 결정합니다.

### **4. 사용 예시**
> **\`Minimum\`과 \`Maximum\`을 모두 (0.5, 0.5)로 설정합니다.**
* **화면 중앙에 고정**:
	\`Minimum\`과 \`Maximum\`을 모두 (0.5, 0.5)로 설정합니다.
* **화면 상단 전체 너비 차지**:
	\`Minimum\`을 (0,0), \`Maximum\`을 (1,0)으로 설정합니다.
* **화면 전체 채우기**:
	\`Minimum\`을 (0,0), \`Maximum\`을 (1,1)로 설정합니다.

### **5. 관련 클래스 및 구조체**
> **이 구조체를 멤버로 포함하여 전체 레이아웃 정보를 구성합니다. 실무 팁: 연관 클래스의 생명주기와 의존도를 반드시 확인하세요.**
* **[[FAnchorData]]**:
	이 구조체를 멤버로 포함하여 전체 레이아웃 정보를 구성합니다.
* **[[UCanvasPanelSlot]]**:
	\`FAnchorData\`를 통해 위젯의 앵커를 설정합니다.
* **[[FVector2D]]**:
	앵커의 X, Y 좌표를 나타내는 데 사용됩니다.
`;export{n as default};
//# sourceMappingURL=FAnchors-CWhiP4pC.js.map
