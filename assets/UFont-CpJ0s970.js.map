{"version":3,"file":"UFont-CpJ0s970.js","sources":["../../content/GraphArchives/UnrealEngine/UFont.md?raw"],"sourcesContent":["export default \"---\\ntitle: 'UFont'\\ndate: '2025-08-17T16:17:41+09:00'\\n---\\n> **텍스트를 렌더링하는 데 사용되는 '글꼴(Font)' 파일의 정보를 담고 있는 에셋입니다.** TTF 또는 OTF와 같은 표준 폰트 파일을 언리얼 엔진으로 임포트하면 `UFont` 에셋이 생성됩니다.\\n\\n### **1. 주요 역할 및 책임**\\n> **폰트 파일의 벡터 또는 비트맵 데이터를 엔진이 사용할 수 있는 형태로 저장하고 관리합니다.**\\n* **폰트 데이터 관리**:\\n\\t폰트 파일의 벡터 또는 비트맵 데이터를 엔진이 사용할 수 있는 형태로 저장하고 관리합니다.\\n* **타입페이스(Typeface) 지원**:\\n\\t하나의 `UFont` 에셋 안에 여러 스타일(예: Regular, Bold, Italic, Light)의 폰트를 '타입페이스'로 포함할 수 있습니다.\\n* **오프라인 및 런타임 폰트 캐싱**:\\n\\t게임에 사용될 글자들을 미리 텍스처 아틀라스(Texture Atlas)로 만들어두거나(오프라인 캐싱), 필요할 때 동적으로 생성(런타임 캐싱)하여 렌더링에 사용합니다.\\n\\n### **2. 핵심 개념**\\n> **`UFont` 에셋의 핵심 기능으로, 여러 폰트와 타입페이스를 하나로 묶는 역할을 합니다.**\\n* **Composite Font**:\\n\\t`UFont` 에셋의 핵심 기능으로, 여러 폰트와 타입페이스를 하나로 묶는 역할을 합니다. 기본 폰트를 설정하고, 특정 유니코드 문자 범위에 대해서는 다른 폰트(예: 한국어, 일본어용 폰트)를 사용하도록 지정할 수 있습니다. 이를 통해 다국어 지원을 효율적으로 구현할 수 있습니다.\\n* **Font Cache Type**:\\n\\t* **Offline:**\\n\\t\\t에디터에서 지정된 문자들만 미리 텍스처로 구워놓습니다. 성능이 좋지만, 지정되지 않은 문자는 런타임에 표시할 수 없습니다.\\n    * **Runtime**:\\n    \\t게임 실행 중에 필요한 글자가 생기면 동적으로 텍스처를 생성합니다. 유연하지만 약간의 런타임 비용이 발생할 수 있습니다.\\n\\n### **3. 사용 방법**\\n> **1.**\\n1.  Windows의 `Fonts` 폴더나 다른 경로에서 TTF/OTF 폰트 파일을 콘텐츠 브라우저로 드래그 앤 드롭하여 임포트합니다.\\n2.  생성된 `UFont` 에셋을 더블 클릭하여 폰트 에디터를 엽니다.\\n3.  'Default Font'에 기본으로 사용할 타입페이스를 지정하고, 필요하다면 'Composite Font' 섹션에서 다른 언어나 스타일에 대한 타입페이스를 추가로 설정합니다.\\n4.  이 `UFont` 에셋을 [[FSlateFontInfo]] 구조체에 할당하여 [[UTextBlock]]과 같은 위젯에서 사용합니다.\\n\\n### **4. 관련 클래스 및 구조체**\\n> **`UFont` 에셋을 참조하고, 폰트 크기, 외곽선 등 추가적인 스타일 정보를 담아 실제 렌더링에 사용되는 구조체입니다.**\\n* **[[FSlateFontInfo]]**:\\n\\t`UFont` 에셋을 참조하고, 폰트 크기, 외곽선 등 추가적인 스타일 정보를 담아 실제 렌더링에 사용되는 구조체입니다.\\n* **[[UTextBlock]]**:\\n\\t화면에 텍스트를 표시하는 위젯으로, [[FSlateFontInfo]]를 통해 `UFont`를 사용합니다.\\n\""],"names":["__vite_glob_1_109"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}