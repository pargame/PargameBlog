{"version":3,"file":"버블정렬-Dymr6LiV.js","sources":["../../content/GraphArchives/Algorithm/버블정렬.md?raw"],"sourcesContent":["export default \"# 버블 정렬\\n\\n버블 정렬은 인접한 두 원소를 비교하여 정렬하는 가장 간단한 [[정렬알고리즘]] 중 하나입니다.\\n\\n## 동작 원리\\n\\n1. 배열의 첫 번째 원소부터 시작\\n2. 인접한 두 원소를 비교\\n3. 순서가 잘못되었으면 교환\\n4. 배열의 끝까지 반복\\n5. 한 번의 순회가 끝나면 가장 큰 원소가 맨 뒤로 이동\\n6. 정렬이 완료될 때까지 반복\\n\\n## 구현 예시\\n\\n```python\\ndef bubble_sort(arr):\\n    n = len(arr)\\n    for i in range(n):\\n        for j in range(0, n - i - 1):\\n            if arr[j] > arr[j + 1]:\\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\\n    return arr\\n```\\n\\n## 특징\\n\\n- [[시간복잡도]]: O(n²)\\n- 공간복잡도: O(1)\\n- 안정 정렬 (Stable Sort)\\n- 제자리 정렬 (In-place Sort)\\n\\n## 관련 알고리즘\\n\\n- [[선택정렬]]: 비슷한 성능의 간단한 정렬\\n- [[삽입정렬]]: 작은 데이터에서 더 효율적\\n\""],"names":["__vite_glob_1_0"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}