{"version":3,"file":"UnrealMotionGraphics-BwGLmgs8.js","sources":["../../content/GraphArchives/UnrealEngine/UnrealMotionGraphics.md?raw"],"sourcesContent":["export default \"---\\ntitle: 'UnrealMotionGraphics'\\ndate: '2025-08-17T16:17:41+09:00'\\n---\\n> **게임의 UI(사용자 인터페이스)를 만들고 관리하기 위한 프레임워크로, 약칭 'UMG'라고 불립니다.** 체력 바, 메뉴, HUD, 인벤토리 등 화면에 표시되는 모든 2D 인터페이스를 블루프린트 기반의 비주얼 디자이너로 쉽게 제작하고 스크립팅할 수 있도록 지원합니다.\\n\\n### **1. 주요 역할 및 책임**\\n> **코드를 작성하지 않고도 버튼, 텍스트, 이미지, 슬라이더 등의 위젯을 캔버스에 배치하고 속성을 편집하여 복잡한 UI 레이아웃을 시각적으로 디자인할 수 있습니다. 실무 팁: 구현 시 성능과 안정성에 유의하세요.**\\n* **시각적 UI 디자인 (Visual UI Design)**:\\n\\t코드를 작성하지 않고도 버튼, 텍스트, 이미지, 슬라이더 등의 위젯을 캔버스에 배치하고 속성을 편집하여 복잡한 UI 레이아웃을 시각적으로 디자인할 수 있습니다.\\n* **UI 스크립팅 (UI Scripting)**:\\n\\t각 위젯의 이벤트(예: 버튼 클릭, 슬라이더 값 변경)에 반응하는 로직을 블루프린트 그래프를 통해 직접 작성할 수 있습니다. 이를 통해 UI와 게임플레이 로직을 쉽게 연결할 수 있습니다.\\n* **애니메이션 (Animation)**:\\n\\t타임라인 기반의 애니메이션 편집기를 내장하고 있어, UI 요소들이 나타나거나 사라지고, 색상이 변하거나 움직이는 등 동적인 효과를 쉽게 만들 수 있습니다.\\n* **해상도 대응 (Resolution Scaling)**:\\n\\t앵커(Anchor)와 DPI 스케일링 규칙을 통해, 다양한 화면 크기와 해상도에서도 UI가 깨지지 않고 일관된 모습으로 보이도록 지원합니다.\\n\\n### **2. 핵심 클래스**\\n> **UMG로 만드는 모든 커스텀 UI의 가장 기본적인 부모 클래스입니다. 실무 팁: 변경 시 성능·안정성·호환성을 먼저 검토하세요.**\\n* **[[UUserWidget]]**:\\n\\tUMG로 만드는 모든 커스텀 UI의 가장 기본적인 부모 클래스입니다. 위젯 블루프린트를 생성하면, 내부적으로는 이 [[UUserWidget]]을 상속받는 새로운 클래스가 만들어집니다.\\n* **[[UWidget]]**:\\n\\tUI를 구성하는 가장 기본적인 요소(버튼, 이미지 등)의 부모 클래스입니다.\\n* **[[UPanelWidget]]**:\\n\\t다른 위젯들을 담을 수 있는 컨테이너 위젯의 부모 클래스입니다. (예: `UCanvasPanel`, `UVerticalBox`, `UGridPanel`)\\n\\n### **3. 주요 위젯 종류**\\n> **클릭 가능한 버튼입니다.**\\n* **[[UButton]]**:\\n\\t클릭 가능한 버튼입니다.\\n* **[[UTextBlock]]**:\\n\\t텍스트를 표시합니다.\\n* **[[UImage]]**:\\n\\t이미지를 표시합니다.\\n* **[[USlider]] / [[UProgressBar]]**:\\n\\t슬라이더나 진행률 바를 만듭니다.\\n* **[[UCanvasPanel]]**:\\n\\t위젯을 자유롭게 특정 좌표에 배치할 수 있는 기본 캔버스입니다.\\n* **[[UVerticalBox]] / [[UHorizontalBox]] / [[UGridPanel]]**:\\n\\t자식 위젯들을 수직, 수평, 또는 그리드 형태로 자동 정렬해주는 컨테이너입니다.\\n\\n### **4. 사용 흐름**\\n> **1. 실무 팁: 프로젝트 요구에 맞는 설정을 우선 검토하세요.**\\n1.  **위젯 블루프린트 생성**:\\n\\t콘텐츠 브라우저에서 `User Interface > Widget Blueprint`를 선택하여 새로운 UI를 생성합니다.\\n2.  **디자인**:\\n\\t디자이너 탭에서 팔레트의 위젯들을 캔버스로 드래그 앤 드롭하여 UI를 구성하고, 디테일 패널에서 속성을 편집합니다.\\n3.  **스크립팅**:\\n\\t그래프 탭으로 전환하여 위젯의 이벤트를 처리하거나 게임플레이 변수와 바인딩하는 로직을 작성합니다.\\n4.  **생성 및 표시**:\\n\\t레벨 블루프린트나 플레이어 컨트롤러 등에서 `Create Widget` 노드로 위젯의 인스턴스를 생성하고, `AddToViewport` 노드를 사용하여 화면에 표시합니다.\""],"names":["__vite_glob_1_171"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}