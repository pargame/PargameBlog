{"version":3,"mappings":"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","names":["extractNameFromPath","path","parts","getContentItemsForCollectionAsync","collection","loaders","__vitePreload","m","relPrefix","absPrefix","entries","p","modules","loader","raw","items","name","rawText","title","parseFrontmatter"],"ignoreList":[],"sources":["../../src/lib/contentIndex.ts"],"sourcesContent":["/**\n * src/lib/contentIndex.ts\n * 책임: 콘텐츠 컬렉션에서 문서 목록/메타를 추출하는 유틸\n * 주요 exports: getContentItemsForCollectionAsync\n * 한글 설명: 파일 경로 기반으로 제목/슬러그를 동적으로 수집합니다.\n */\n\nimport type { Item } from './search'\nimport { parseFrontmatter } from './frontmatter'\n\nfunction extractNameFromPath(path: string) {\n  const parts = path.split('/')\n  const file = parts[parts.length - 1] || ''\n  return file.replace(/\\.md$/, '')\n}\n\n// Async loader: dynamically import only the requested collection's markdown files.\nexport async function getContentItemsForCollectionAsync(collection: string): Promise<Item[]> {\n  const rel = import.meta.glob('../content/**/*.md', { query: '?raw', import: 'default' }) as Record<string, () => Promise<string | { default: string }>>\n  const abs = import.meta.glob('/content/**/*.md', { query: '?raw', import: 'default' }) as Record<string, () => Promise<string | { default: string }>>\n  const loaders = { ...rel, ...abs }\n  const relPrefix = `../content/${collection}/`\n  const absPrefix = `/content/${collection}/`\n  const entries = Object.entries(loaders).filter(([p]) => p.startsWith(relPrefix) || p.startsWith(absPrefix))\n  const modules: Record<string, string> = {}\n  await Promise.all(entries.map(async ([p, loader]) => {\n    try {\n      const m = await loader()\n      const raw = typeof m === 'string' ? m : (m as { default?: string })?.default ?? ''\n      modules[p] = raw\n    } catch {\n      /* ignore file-level failures */\n    }\n  }))\n\n  const items: Item[] = []\n  for (const [p, raw] of Object.entries(modules)) {\n    const name = extractNameFromPath(p)\n    try {\n      const rawText = typeof raw === 'string' ? raw : (raw as { default?: string }).default || ''\n      const parsed = parseFrontmatter(rawText)\n      const title = parsed.data.title || name\n      items.push({ slug: name, title })\n    } catch {\n      items.push({ slug: name, title: name })\n    }\n  }\n  return items\n}\n\n// Note: the old synchronous API was intentionally removed to avoid eager bundling.\n// Use getContentItemsForCollectionAsync(collection) instead which dynamically imports content.\n"],"file":"assets/contentIndex-MOlcthWX.js"}