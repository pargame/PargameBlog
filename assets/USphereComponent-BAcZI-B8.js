const n=`---
title: 'USphereComponent'
date: '2025-08-17T16:17:41+09:00'
---
> **보이지 않는 '구체(Sphere)' 형태의 볼륨을 제공하여, 특정 영역을 감지하거나 간단한 물리적 충돌을 표현하는 데 사용되는 컴포넌트입니다.**

### **1. 주요 역할 및 책임**
> **다른 오브젝트가 이 구체 영역에 들어오거나 나가는 것을 감지하는 트리거 볼륨으로 가장 많이 사용됩니다. 실무 팁: 구현 시 성능과 안정성에 유의하세요.**
* **영역 감지 (Overlap Detection)**:
	다른 오브젝트가 이 구체 영역에 들어오거나 나가는 것을 감지하는 트리거 볼륨으로 가장 많이 사용됩니다. (예: 아이템 획득 범위, 자동문 감지, 스킬 범위 표시)
* **간단한 충돌체 (Simple Collision)**:
	간단한 구체 형태의 물리적 충돌을 표현할 때 사용됩니다. 복잡한 메시 충돌보다 훨씬 효율적이므로, 간단한 발사체나 오브젝트의 물리적 경계로 사용하기에 적합합니다.
* **쿼리 및 추적 (Query and Tracing)**:
	특정 위치 주변의 오브젝트를 찾는 등 월드 쿼리(Line Trace, Sphere Trace)의 기준으로 사용될 수 있습니다.

### **2. 핵심 함수 및 속성**
> **구체의 반지름을 설정합니다. 실무 팁: 기본값과 런타임 영향부터 확인하세요.**
* **\`SetSphereRadius(float InSphereRadius)\`**:
	구체의 반지름을 설정합니다. 런타임에 동적으로 크기를 조절할 수 있습니다.
* **\`GetScaledSphereRadius()\`**:
	컴포넌트나 액터의 스케일을 포함하여, 최종적으로 월드에 적용된 구체의 반지름을 가져옵니다.
* **\`OnComponentBeginOverlap\`**:
	다른 컴포넌트가 이 컴포넌트의 영역에 들어왔을 때 호출되는 [[Event]]입니다. 트리거 기능의 핵심입니다.
* **\`OnComponentEndOverlap\`**:
	다른 컴포넌트가 이 컴포넌트의 영역에서 나갔을 때 호출되는 [[Event]]입니다.

### **3. 상위 클래스**
> **구, 박스, 캡슐 등 특정 형태를 가진 충돌 컴포넌트의 기본 클래스입니다.**
* **[[UShapeComponent]]**:
	구, 박스, 캡슐 등 특정 형태를 가진 충돌 컴포넌트의 기본 클래스입니다.
* **[[UPrimitiveComponent]]**:
	렌더링되거나 물리적 상호작용을 할 수 있는 모든 컴포넌트의 기본 클래스입니다. \`Overlap\` 이벤트는 이 클래스에 정의되어 있습니다.`;export{n as default};
//# sourceMappingURL=USphereComponent-BAcZI-B8.js.map
