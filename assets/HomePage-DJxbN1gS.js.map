{"version":3,"mappings":";8KAOO,SAASA,EAAeC,EAA0B,CACvD,GAAI,CAACA,EAAS,MAAO,GACrB,GAAI,CACF,MAAMC,EAAI,IAAI,KAAKD,CAAO,EAC1B,GAAI,MAAMC,EAAE,SAAS,EAAG,OAAOD,EAE/B,MAAME,EAAOD,EAAE,cACTE,EAAK,OAAOF,EAAE,WAAa,CAAC,EAAE,SAAS,EAAG,GAAG,EAC7CG,EAAK,OAAOH,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EACxCI,EAAW,GAAGH,CAAI,IAAIC,CAAE,IAAIC,CAAE,GAIpC,GAAI,CADY,WAAW,KAAKJ,CAAO,EACzB,OAAOK,EAErB,MAAMC,EAAK,OAAOL,EAAE,UAAU,EAAE,SAAS,EAAG,GAAG,EACzCM,EAAM,OAAON,EAAE,YAAY,EAAE,SAAS,EAAG,GAAG,EAClD,MAAO,GAAGI,CAAQ,MAAMC,CAAE,IAAIC,CAAG,EACnC,MAAQ,CACN,OAAOP,CACT,CACF,CChBA,MAAMQ,EAAqB,IAAM,CAC/B,MAAMC,EAAWC,EAAA,EACX,CAACC,EAAOC,CAAQ,EAAIC,WAAwB,IAAI,EACtDC,mBAAU,IAAM,CACd,IAAIC,EAAU,GACb,OAAC,SAAY,CACZ,GAAI,CAEF,MAAMC,EAAM,MADA,MAAAC,EAAA,IAAM,OAAO,qBAAc,OAAAC,KAAA,sCACjB,eAClBH,KAAkBC,CAAG,CAC3B,MAAQ,CACFD,GAASH,EAAS,EAAE,CAC1B,CACF,KACO,IAAM,CAAEG,EAAU,EAAM,CACjC,EAAG,EAAE,EAEHI,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,OAAI,MAAO,CAAE,MAAO,OAAQ,UAAW,SAAU,WAAY,UAAW,QAAS,UAChF,SAAAD,OAAC,QAAK,MAAO,CAAE,MAAO,UAAW,SAAU,SAAU,WAAY,KAAO,0CAErE,KAAE,KAAK,mCAAmC,OAAO,SAAS,IAAI,sBAAsB,MAAO,CAAE,MAAO,UAAW,SAAU,SAAU,WAAY,IAAK,eAAgB,aAAe,cAAE,GACxL,EACF,EACAA,OAAC,OAAI,UAAU,eACb,UAAAC,MAAC,MAAG,UAAU,aAAa,8BAAkB,EAC7CA,MAAC,KAAE,UAAU,gBAAgB,qCAAyB,GACxD,EAEAD,OAAC,OAAI,UAAU,kBACb,UAAAC,MAAC,MAAG,2BAAe,EAEbT,IAAU,KACLS,MAAC,KAAE,qBAAS,EAEjB,CAACT,GAASA,EAAM,SAAW,SAE1B,KAAE,8BAAiBS,MAAC,MAAG,4BAAgB,EAAK,+BAA2B,EAGrET,EAAM,IAAIU,GACfF,OAAC,OACC,UAAU,eAEV,KAAK,SACL,SAAU,EACV,QAAS,IAAMV,EAAS,UAAUY,EAAK,IAAI,EAAE,EAC7C,UAAYC,GAAM,EAAMA,EAAE,MAAQ,SAAWA,EAAE,MAAQ,OAAOA,EAAE,iBAAkBb,EAAS,UAAUY,EAAK,IAAI,EAAE,EAAI,EAEpH,UAAAD,MAAC,MACC,SAAAA,MAACG,EAAA,CAAK,GAAI,UAAUF,EAAK,IAAI,GAAI,QAAUC,GAAM,CAAEA,EAAE,iBAAkB,EAAI,SAAAD,EAAK,KAAK,MAAM,EAC7F,EACCA,EAAK,KAAK,QAAUD,MAAC,KAAG,SAAAC,EAAK,KAAK,QAAQ,EAAO,YACjD,SACE,UAAAtB,EAAesB,EAAK,KAAK,IAAI,EAC7BA,EAAK,KAAK,OAAS,MAAMA,EAAK,KAAK,MAAM,GAAK,MACjD,IAbKA,EAAK,KAeb,CACA,EACL,GACF,CAEJ","names":["formatPostDate","dateStr","d","yyyy","mm","dd","datePart","hh","min","HomePage","navigate","useNavigate","posts","setPosts","useState","useEffect","mounted","all","__vitePreload","n","jsxs","jsx","post","e","Link"],"ignoreList":[],"sources":["../../src/lib/date.ts","../../src/pages/HomePage.tsx"],"sourcesContent":["/**\n * src/lib/date.ts\n * 책임: 날짜 문자열을 포맷팅하여 표시 형식으로 변환\n * 주요 exports: formatPostDate(dateStr) -> string\n * 한글 설명: 날짜를 YYYY-MM-DD 형식으로, 시간이 있으면 · HH:MM을 추가합니다.\n */\n\nexport function formatPostDate(dateStr?: string): string {\n  if (!dateStr) return ''\n  try {\n    const d = new Date(dateStr)\n    if (isNaN(d.getTime())) return dateStr\n\n    const yyyy = d.getFullYear()\n    const mm = String(d.getMonth() + 1).padStart(2, '0')\n    const dd = String(d.getDate()).padStart(2, '0')\n    const datePart = `${yyyy}-${mm}-${dd}`\n\n    // Detect whether original string contained a time component\n    const hasTime = /T|:\\d{2}/.test(dateStr)\n    if (!hasTime) return datePart\n\n    const hh = String(d.getHours()).padStart(2, '0')\n    const min = String(d.getMinutes()).padStart(2, '0')\n    return `${datePart} · ${hh}:${min}`\n  } catch {\n    return dateStr\n  }\n}\n","/**\n * src/pages/HomePage.tsx\n * 책임: 홈 페이지 렌더링 (포스트 목록 로드 및 네비게이션)\n * 주요 export: default HomePage (React.FC)\n * 한글 설명: 비동기으로 포스트를 로드하여 최근 게시물 목록을 표시합니다.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { formatPostDate } from '../lib/date';\nimport type { Post } from '../types'\n\nconst HomePage: React.FC = () => {\n  const navigate = useNavigate()\n  const [posts, setPosts] = useState<Post[] | null>(null)\n  useEffect(() => {\n    let mounted = true\n    ;(async () => {\n      try {\n        const mod = await import('../lib/posts')\n        const all = await mod.loadAllPosts()\n        if (mounted) setPosts(all)\n      } catch {\n        if (mounted) setPosts([])\n      }\n    })()\n    return () => { mounted = false }\n  }, [])\n  return (\n    <div className=\"page\">\n      <div style={{ width: '100%', textAlign: 'center', background: '#fff9e6', padding: '1rem 0' }}>\n        <span style={{ color: '#1f2937', fontSize: '2.4rem', fontWeight: 800 }}>\n          최신 버전 사이트로 이동해주시기 바랍니다&nbsp;\n          <a href=\"https://pargame.github.io/MyBlog\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#065f46', fontSize: '2.2rem', fontWeight: 800, textDecoration: 'underline' }}>링크</a>\n        </span>\n      </div>\n      <div className=\"hero-section\">\n        <h1 className=\"hero-title\">Pargame's Postings</h1>\n        <p className=\"hero-subtitle\">마크다운으로 작성하면 포스팅되는 페이지입니다.</p>\n      </div>\n      \n      <div className=\"content-section\">\n        <h2>Recent Postings</h2>\n        {(() => {\n          if (posts === null) {\n            return <p>포스트 로딩 중…</p>\n          }\n          if (!posts || posts.length === 0) {\n            return (\n              <p>아직 게시된 포스트가 없어요. <em>content/Postings</em> 폴더에 마크다운 파일(.md)을 추가해 주세요.</p>\n            )\n          }\n          return posts.map(post => (\n            <div\n              className=\"post-preview\"\n              key={post.slug}\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => navigate(`/posts/${post.slug}`)}\n              onKeyDown={(e) => { if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); navigate(`/posts/${post.slug}`) } }}\n            >\n              <h3>\n                <Link to={`/posts/${post.slug}`} onClick={(e) => { e.stopPropagation() }}>{post.meta.title}</Link>\n              </h3>\n              {post.meta.excerpt ? <p>{post.meta.excerpt}</p> : null}\n              <small>\n                {formatPostDate(post.meta.date)}\n                {post.meta.author ? ` · ${post.meta.author}` : null}\n              </small>\n            </div>\n          ))\n        })()}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"file":"assets/HomePage-DJxbN1gS.js"}