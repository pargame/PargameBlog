const n=`---
title: 'ULightComponent'
date: '2025-08-17T16:17:41+09:00'
---
> **[[ALight]] 액터의 실제 '빛' 기능을 담당하는 핵심 컴포넌트입니다.** 빛의 색상, 강도, 감쇠 반경, 그림자 설정 등 조명의 모든 광학적 속성을 정의하고 제어합니다.

### **1. 주요 역할 및 책임**
> **빛의 밝기(세기)를 조절합니다. 실무 팁: 구현 시 성능과 안정성에 유의하세요.**
* **빛의 속성 정의 (Defining Light Properties)**:
	* **\`Intensity\`:**
		빛의 밝기(세기)를 조절합니다.
    * **\`LightColor\`**:
    	빛의 색상을 설정합니다.
    * **\`AttenuationRadius\`**:
    	빛이 도달하는 최대 거리를 설정합니다.
* **그림자 제어 (Controlling Shadows)**:
	\`Cast Shadows\` 속성을 통해 이 빛이 그림자를 생성할지 여부를 결정하고, 그림자의 해상도, 필터링 품질 등 세부적인 그림자 옵션을 제어합니다.
* **성능 최적화 (Performance Optimization)**:
	빛의 가시성, 컬링 거리(Culling Distance) 등을 조절하여 렌더링 성능에 미치는 영향을 관리합니다.

### **2. 주요 서브클래스**
> **태양처럼 무한히 먼 곳에서 한 방향으로 평행하게 내리쬐는 빛을 시뮬레이션합니다. 실무 팁: 변경 시 성능·안정성·호환성을 먼저 검토하세요.**
* **[[UDirectionalLightComponent]]**:
	태양처럼 무한히 먼 곳에서 한 방향으로 평행하게 내리쬐는 빛을 시뮬레이션합니다. 주로 레벨의 전체적인 야외 조명으로 사용됩니다.
* **[[UPointLightComponent]]**:
	전구처럼 한 점에서 모든 방향으로 균일하게 퍼져나가는 빛을 시뮬레이션합니다. 램프, 촛불, 폭발 효과 등에 사용됩니다.
* **[[USpotLightComponent]]**:
	손전등이나 무대 조명처럼 원뿔 형태로 특정 영역만 비추는 빛을 시뮬레이션합니다. 특정 대상이나 영역을 강조할 때 효과적입니다.
* **[[URectLightComponent]]**:
	사각형 평면에서 빛을 방출합니다. 창문이나 형광등처럼 넓고 부드러운 광원을 표현하는 데 사용됩니다.
* **[[USkyLightComponent]]**:
	하늘 전체나 지정된 큐브맵으로부터 오는 빛(간접광, 반사광)을 시뮬레이션하여, 그림자가 진 어두운 영역의 디테일을 사실적으로 채워주는 역할을 합니다.

### **3. 사용 방법**
> **1. 실무 팁: 프로젝트 요구에 맞는 설정을 우선 검토하세요.**
1.  **컴포넌트 추가**:
	액터 블루프린트의 컴포넌트 패널에서 \`+ 추가\` 버튼을 누르고 원하는 라이트 컴포넌트(예: \`Point Light\`)를 검색하여 추가합니다.
2.  **속성 편집**:
	추가된 라이트 컴포넌트를 선택하고, 디테일 패널에서 \`Intensity\`, \`LightColor\`, \`AttenuationRadius\` 등 빛의 속성을 원하는 대로 조절합니다.`;export{n as default};
//# sourceMappingURL=ULightComponent-Bv-gmsqI.js.map
