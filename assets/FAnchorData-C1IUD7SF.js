const n=`---
title: 'FAnchorData'
date: '2025-08-17T16:17:41+09:00'
---
> **[[UCanvasPanelSlot]]에서 위젯의 레이아웃을 결정하는 핵심 데이터 구조체입니다.** 앵커, 오프셋, 정렬 정보를 모두 포함하여 위젯이 캔버스 내에서 어떻게 위치하고 크기가 조절될지를 정의합니다.

### **1. 주요 역할 및 책임**
> **위젯의 위치, 크기, 정렬과 관련된 모든 속성을 하나의 구조체로 묶어 관리합니다.**
* **레이아웃 정보 통합**:
	위젯의 위치, 크기, 정렬과 관련된 모든 속성을 하나의 구조체로 묶어 관리합니다.
* **해상도 대응의 핵심**:
	\`Anchors\`와 \`Offsets\`의 조합을 통해, 화면 크기가 변할 때 위젯이 어떻게 반응할지를 결정하는 중심적인 역할을 합니다.

### **2. 핵심 멤버 변수**
> **위젯의 네 모서리가 부모 캔버스의 어느 비율 지점에 고정될지를 정의합니다. 실무 팁: 기본값과 런타임 영향부터 확인하세요.**
* **\`Anchors\` (\`FAnchors\`)**:
	위젯의 네 모서리가 부모 캔버스의 어느 비율 지점에 고정될지를 정의합니다.
* **\`Offsets\` (\`FMargin\`)**:
	\`Anchors\`에 의해 결정된 위치를 기준으로, 위젯의 각 경계선(왼쪽, 위, 오른쪽, 아래)이 얼마나 더 떨어져 있는지를 픽셀 단위로 설정합니다.
* **\`Alignment\` (\`FVector2D\`)**:
	앵커가 하나의 점으로 모여 있을 때(Min=Max), 위젯을 해당 앵커 포인트에 어떻게 정렬할지 결정합니다. (0,0)은 위젯의 왼쪽 위를 앵커에, (0.5, 0.5)는 위젯의 중앙을 앵커에 맞춥니다.

### **3. 사용 예시**
> **\`Anchors\`를 (Min: 0,0, Max: 1,1)로 설정하고, \`Offsets\`을 (Left:0, Top:0, Right:0, Bottom:0)으로 설정하면 위젯이 부모 캔버스를 가득 채웁니다.**
*   **전체 화면 채우기**:
	\`Anchors\`를 (Min: 0,0, Max: 1,1)로 설정하고, \`Offsets\`을 (Left:0, Top:0, Right:0, Bottom:0)으로 설정하면 위젯이 부모 캔버스를 가득 채웁니다.
*   **오른쪽 위에 고정**:
	\`Anchors\`를 (Min: 1,0, Max: 1,0)으로 설정하고, \`Alignment\`를 (1,0)으로 설정하면 위젯의 오른쪽 위 모서리가 부모 캔버스의 오른쪽 위 모서리에 고정됩니다. \`Offsets\`을 사용하여 추가적인 여백을 줄 수 있습니다.

### **4. 관련 클래스 및 구조체**
> **이 구조체를 사용하여 자식 위젯의 레이아웃을 관리합니다. 실무 팁: 연관 클래스의 생명주기와 의존도를 반드시 확인하세요.**
* **[[UCanvasPanelSlot]]**:
	이 구조체를 사용하여 자식 위젯의 레이아웃을 관리합니다.
* **[[FAnchors]]**:
	앵커의 최소/최대 위치를 정의합니다.
* **[[FMargin]]**:
	오프셋 값을 정의합니다.
* **[[FVector2D]]**:
	정렬 값을 정의합니다.
`;export{n as default};
//# sourceMappingURL=FAnchorData-C1IUD7SF.js.map
