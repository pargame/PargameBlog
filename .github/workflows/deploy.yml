name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          set -e
          echo "Installing dependencies with npm ci (preferred)…"
          if ! npm ci --include=optional; then
            echo "npm ci failed (likely due to optional deps bug with Rollup native binaries). Falling back to clean install…"
            rm -rf node_modules package-lock.json
            npm install --no-audit --no-fund --include=optional
          fi
          # Ensure optional platform-specific deps are evaluated for the current runner
          npm rebuild || true

      - name: Verify Rollup availability (self-heal)
        run: |
          set +e
          # Verify that Rollup can be loaded (this will exercise native/wasm resolution internally)
          node -e "try { require('rollup'); } catch (e) { console.error(e); process.exit(1); }"
          rc=$?
          set -e
          if [ $rc -ne 0 ]; then
            echo "Rollup failed to load. Reinstalling without lockfile and applying fallbacks…"
            rm -rf node_modules package-lock.json
            npm install --no-audit --no-fund --include=optional
            # Final fallback: explicitly install Linux x64 native package for Rollup
            if ! node -e "try { require('rollup'); } catch (e) { process.exit(1); }"; then
              echo "Explicitly installing @rollup/rollup-linux-x64-gnu…"
              npm install -D @rollup/rollup-linux-x64-gnu@^4 --no-audit --no-fund || true
            fi
            # Verify again (will throw if still broken)
            node -e "try { require('rollup'); } catch (e) { console.error(e); process.exit(1); }"
          fi

      - name: Typecheck
        run: npm run typecheck
      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
